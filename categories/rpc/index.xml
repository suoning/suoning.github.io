<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RPC on B族维生素</title>
    <link>https://suoning.github.io/categories/rpc/</link>
    <description>Recent content in RPC on B族维生素</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 28 Feb 2021 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://suoning.github.io/categories/rpc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>rpc http</title>
      <link>https://suoning.github.io/posts/rpc-http/</link>
      <pubDate>Sun, 28 Feb 2021 00:00:00 +0800</pubDate>
      
      <guid>https://suoning.github.io/posts/rpc-http/</guid>
      <description>rpc定义 RPC（Remote Procedure Call，远程过程调用）。
其调用协议通常包括序列化协议和传输协议。
序列化协议有 XML、 JSON、Protobuf 和 Hessian。
传输协议是指其底层网络传输所使用的协议， TCP、HTTP。
基于这套协议规范来实现的框架都可以称为 RPC 框架，比如 Thrift 和 gRPC。
rpc 与 http 的关系 这是一道面试题。
HTTP 和 TCP 协议都可以作为 RPC 的传输协议。
gRPC的网络传输协议就是 HTTP2。
tcp or http TCP 协议可以对协议字段进行定制，减少非必要字段的传输，减少网络开销；
而 HTTP 协议则包含了头部等信息。
常见的rpc框架 grpc 特性
  内置流式 RPC 支持。
  基于 ProtoBuf 进行数据序列化。
  底层基于 HTTP/2 标准设计。
  优秀的社区支持。
  提供多种语言支持。
  thrift 通信协议（TProtocol）
  二进制编码协议（TBinaryProtocol）</description>
    </item>
    
  </channel>
</rss>